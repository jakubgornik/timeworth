generator client {
  provider = "prisma-client-js"
  output   = "./client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  MANAGER
  EMPLOYEE
}

model User {
  id             String   @id // it will match Supabase Auth UUID
  email          String   @unique
  name           String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt()
  organizationId String?

  organization  Organization?  @relation(fields: [organizationId], references: [id])
  role          UserRole       @default(EMPLOYEE)
  workEntries   WorkEntry[]
  refreshTokens RefreshToken[]
}

model Organization {
  id         String   @id @default(cuid())
  name       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt()
  inviteCode String   @unique
  industry   String?
  size       String?
  address    String?

  members     User[]
  workEntries WorkEntry[]
}

model WorkEntry {
  id          String    @id @default(cuid())
  description String?
  startedAt   DateTime
  endedAt     DateTime?
  hoursWorked Float?
  hourlyRate  Float?
  billable    Boolean   @default(true)
  approved    Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt()

  userId         String
  organizationId String
  projectId      String? // TODO: link to projects

  user         User         @relation(fields: [userId], references: [id])
  organization Organization @relation(fields: [organizationId], references: [id])

  @@index([userId, organizationId])
  @@index([startedAt, endedAt])
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  createdAt DateTime @default(now())
  revoked   Boolean  @default(false)
  expiresAt DateTime
  userId    String

  user User @relation(fields: [userId], references: [id])
}
